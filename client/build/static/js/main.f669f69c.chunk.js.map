{"version":3,"sources":["context/UserProvider.js","components/Nav.js","components/Course.js","components/Courses.js","components/Errors/NotFound.js","components/CourseDetail/ActionBar.js","components/CourseDetail/CourseContent.js","components/CourseDetail/CourseMaterial.js","components/CourseDetail/CourseDetail.js","components/User/UserSignUp.js","components/User/UserSignIn.js","components/CreateCourse.js","components/CourseDetail/UpdateCourse.js","components/PrivateRoute.js","components/Errors/ErrorBoundary.js","components/Errors/ServerError.js","components/User/UserSignOut.js","components/Errors/Forbidden.js","App.js","index.js","img/svg/007-content.svg","img/svg/001-woman.svg","img/svg/004-alarm-clock.svg","img/svg/002-pencil.svg","img/svg/008-online-learning.svg"],"names":["UserContext","React","createContext","UserProvider","state","authenticated","username","password","firstName","lastName","userId","location","signIn","cookies","_this","props","setState","userCookie","set","JSON","stringify","path","signOut","remove","updateLocation","pathname","userInfo","userCookies","this","get","Object","objectSpread","react_default","a","createElement","Provider","value","children","Component","withCookies","Nav","_useContext","useContext","className","Link","to","onClick","Fragment","Course","concat","courseId","src","require","alt","title","Courses","loading","courses","courseCreator","map","course","index","components_Course","key","_id","_this2","context","axios","then","results","data","catch","err","console","log","response","status","history","push","version","xmlns","x","y","viewBox","points","contextType","NotFound","withRouter","courseUserId","delete","auth","res","CourseContent","courseTitle","courseInstructor","courseDescription","react_markdown_default","source","CourseMaterial","materialsNeeded","estimatedTime","CourseDetail","query","match","params","id","result","CourseDetail_ActionBar","user","CourseDetail_CourseContent","description","CourseDetail_CourseMaterial","UserSignUp","emailAddress","confirmPassword","alreadyExists","attemptedSubmit","handleSubmit","e","preventDefault","_this$state","isValid","post","checkIfExists","handleChange","defineProperty","target","name","inputName","email","pass","confirmPass","fName","lName","test","errorMessage","onSubmit","onChange","type","placeholder","UserSignIn","attemptedSignIn","accessDenied","accessDeniedMessage","length","_this$setState","CreateCourse","_this$context","validateInput","method","url","headers","createErrorMessage","trim","str","replace","courseEstimatedTime","courseMaterials","UpdateCourse","_result$data","PrivateRoute","_ref","component","rest","objectWithoutProperties","currentLocation","useEffect","Route","assign","render","Redirect","ErrorBoundary","error","errorInfo","style","whiteSpace","componentStack","ServerError","UserSignOut","Forbidden","App","Errors_ErrorBoundary","context_UserProvider","BrowserRouter","components_Nav","Switch","exact","components_PrivateRoute","ReactDOM","es6","src_App_0","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"qOAGaA,EAAcC,IAAMC,gBAE3BC,6MACFC,MAAQ,CACJC,cAAgB,KAChBC,SAAW,KACXC,SAAW,KACXC,UAAY,KACZC,SAAW,KACXC,OAAS,KACTC,SAAW,OAYbC,OAAS,SAACN,EAAUC,EAAUC,EAAWC,EAAUC,EAAQL,GAGzD,GAAGA,EAAc,KACPQ,EAAYC,EAAKC,MAAjBF,QACRC,EAAKE,SAAS,CACZX,gBACAC,WACAE,YACAC,WACAF,WACAG,WAGF,IAAMO,EAAa,CACjBZ,gBACAC,WACAE,YACAC,WACAF,WACAG,UAEFG,EAAQK,IAAI,OAAQC,KAAKC,UAAUH,GAAa,CAAEI,KAAM,WAGxDP,EAAKE,SAAS,CACZX,eAAgB,EAChBC,SAAW,KACXC,SAAW,KACXC,UAAY,KACZC,SAAU,KACVC,OAAS,UASfY,QAAU,WAAM,IACNT,EAAYC,EAAKC,MAAjBF,QACRC,EAAKE,SAAS,CACZX,cAAe,KACfC,SAAU,KACVC,SAAU,KACVC,UAAY,KACZC,SAAW,KACXC,OAAS,KACTC,SAAW,MAEbE,EAAQU,OAAO,OAAQ,CAAEF,KAAM,SAQjCG,eAAiB,SAACC,GAChBX,EAAKE,SAAS,CAACL,SAAWc,6EAK5B,IAAIC,EAGEC,EAFcC,KAAKb,MAAjBF,QAEoBgB,IAAI,QAS9B,OALAH,GADEE,KAAKxB,MAAMC,eAAiBsB,EACnBA,EAGHG,OAAAC,EAAA,EAAAD,CAAA,GAAOF,KAAKxB,OAGhB4B,EAAAC,EAAAC,cAAClC,EAAYmC,SAAb,CAAsBC,MAAKN,OAAAC,EAAA,EAAAD,CAAA,GACpBJ,EADoB,CAEvBd,OAASgB,KAAKhB,OACdU,QAAUM,KAAKN,QACfE,eAAiBI,KAAKJ,kBAErBI,KAAKb,MAAMsB,iBAxGDC,aA8GZC,cAAYpC,GCrFZqC,EA1BH,SAACzB,GAAU,IAAA0B,EAEQC,qBAAW1C,GAAjCQ,EAFciC,EAEdjC,UAAWc,EAFGmB,EAEHnB,QAEhB,OACEU,EAAAC,EAAAC,cAAA,OAAKS,UAAU,UACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,UACbX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAG,KAAIb,EAAAC,EAAAC,cAAA,MAAIS,UAAU,gBAAd,YAEbX,EAAAC,EAAAC,cAAA,WAAM1B,EACAwB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBAAe1B,GACfwB,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMD,UAAU,UAAUE,GAAG,IAAIC,QAASxB,GAA1C,aAGFU,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMD,UAAU,SAASE,GAAG,WAA5B,WACAb,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMD,UAAU,SAASE,GAAG,WAA5B,gCCNHG,EAXA,SAACjC,GACZ,OACIiB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACXX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMD,UAAU,8BAA8BE,GAAE,WAAAI,OAAalC,EAAMmC,WAC/DlB,EAAAC,EAAAC,cAAA,MAAIS,UAAU,iBAAd,UACAX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,iBAAgBX,EAAAC,EAAAC,cAAA,OAAKiB,IAAKC,EAAQ,IAAuCC,IAAI,WAAWV,UAAU,qBAAhH,IAA2I5B,EAAMuC,UCF3JC,6MACJnD,MAAQ,CACNoD,SAAU,EACVC,QAAU,MAgCZC,cAAgB,WAEZ,OADc5C,EAAKV,MAAMqD,QACVE,IAAI,SAACC,EAAQC,GACxB,OACI7B,EAAAC,EAAAC,cAAC4B,EAAD,CACIC,IAAKF,EACLX,SAAUU,EAAOI,IACjBV,MAAOM,EAAON,+FAjCT,IAAAW,EAAArC,KACnBA,KAAKsC,QAAQ1C,eAAe,KAC5BI,KAAKZ,SAAS,CAACwC,SAAU,IAGzBW,IAAMtC,IAAI,gBACHuC,KAAK,SAAAC,GACJ,IAAMZ,EAAUY,EAAQC,KAAKb,QAC7BQ,EAAKjD,SAAS,CACZyC,UACAD,SAAU,MAGbe,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GAEe,MAAxBA,EAAIG,SAASC,QACdX,EAAKlD,MAAM8D,QAAQC,KAAK,6CAuBlC,OACE9C,EAAAC,EAAAC,cAAA,OAAKS,UAAU,UACZf,KAAK8B,gBACN1B,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACXX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMD,UAAU,qCAAqCE,GAAG,mBACpDb,EAAAC,EAAAC,cAAA,MAAIS,UAAU,sBAAqBX,EAAAC,EAAAC,cAAA,OAAK6C,QAAQ,MAAMC,MAAM,6BAA6BC,EAAE,MAAMC,EAAE,MACnGC,QAAQ,YAAYxC,UAAU,OAC9BX,EAAAC,EAAAC,cAAA,WAASkD,OAAO,0DAFhB,wBAtDM9C,aAiEtBiB,EAAQ8B,YAAcrF,EACPuD,QC9DA+B,EATE,WACb,OACItD,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACXX,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,4ECwCGqD,cAzCG,SAACxE,GAAU,IAAA0B,EAEYC,qBAAW1C,GAAzCU,EAFkB+B,EAElB/B,OAAQJ,EAFUmC,EAEVnC,SAAUC,EAFAkC,EAEAlC,SAmBzB,OACIyB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACXX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,UACXX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YACXX,EAAAC,EAAAC,cAAA,YAEKxB,IAAWK,EAAMyE,cACdxD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACIf,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMD,UAAU,SAASE,GAAE,YAAAI,OAAclC,EAAMmC,SAApB,YAA3B,iBACAlB,EAAAC,EAAAC,cAAA,UAAQS,UAAU,SAASG,QAvBlC,WACjBqB,IAAMsB,OAAN,gBAAAxC,OAA6BlC,EAAMmC,UAAY,CAC3CwC,KAAO,CACHpF,WACAC,cAEL6D,KAAK,SAAAuB,GAEJ5E,EAAM8D,QAAQC,KAAK,OACpBP,MAAM,SAAAC,GACLzD,EAAM8D,QAAQC,KAAK,UACnBL,QAAQC,IAAIF,OAYQ,mBAIZxC,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMD,UAAU,0BAA0BE,GAAG,KAA7C,wCCnBL+C,EAjBO,SAAC7E,GAAU,IACtB8E,EAAoD9E,EAApD8E,YAAaC,EAAuC/E,EAAvC+E,iBAAkBC,EAAqBhF,EAArBgF,kBAEtC,OACI/D,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACXX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACXX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,iBAAgBX,EAAAC,EAAAC,cAAA,OAAKiB,IAAKC,EAAQ,IAAkCC,IAAI,WAAWV,UAAU,qBAA3G,WACAX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,iBAAiBkD,GAC/B7D,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,OAAKiB,IAAKC,EAAQ,IAAgCC,IAAI,WAAWV,UAAU,qBAA9E,OAA4GmD,IAEhH9D,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACXX,EAAAC,EAAAC,cAAC8D,EAAA/D,EAAD,CAAegE,OAAQF,OCaxBG,EAxBQ,SAACnF,GAAU,IAEvBoF,EAAkCpF,EAAlCoF,gBAAiBC,EAAiBrF,EAAjBqF,cAExB,OACIpE,EAAAC,EAAAC,cAAA,OAAKS,UAAU,sBACXX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBACXX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,uBACVX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,6BACVX,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,OAAKiB,IAAKC,EAAQ,IAAsCC,IAAI,WAAWV,UAAU,qBAArF,mBACAX,EAAAC,EAAAC,cAAA,UAAKkE,IAETpE,EAAAC,EAAAC,cAAA,MAAIS,UAAU,6BACVX,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,OAAKiB,IAAKC,EAAQ,IAAiCC,IAAI,WAAWV,UAAU,qBAAhF,qBACAX,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC8D,EAAA/D,EAAD,CAAegE,OAAQE,UCP7CE,6MACFjG,MAAQ,CACJoD,SAAU,EACVI,OAAS,uFAIS,IAAAK,EAAArC,KACZ0E,EAAQ1E,KAAKb,MAAMwF,MAAMC,OAAOC,GACtC7E,KAAKsC,QAAQ1C,eAAb,YAAAyB,OAAwCqD,IAExCnC,IAAMtC,IAAN,gBAAAoB,OAA0BqD,IACnBlC,KAAK,SAAAsC,GACJzC,EAAKjD,SAAS,CACZ4C,OAAS8C,EAAOpC,KAChBd,SAAU,MAGbe,MAAM,SAAAC,GAELP,EAAKlD,MAAM8D,QAAQC,KAAK,aACxBL,QAAQC,IAAIF,sCAKpB,OACExC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,yBAEZf,KAAKxB,MAAMoD,QAAUxB,EAAAC,EAAAC,cAAA,qBACpBF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAACyE,EAAD,CAAWzD,SAAUtB,KAAKxB,MAAMwD,OAAOI,IAAKwB,aAAc5D,KAAKxB,MAAMwD,OAAOgD,KAAK5C,MACjFhC,EAAAC,EAAAC,cAAC2E,EAAD,CACIhB,YAAajE,KAAKxB,MAAMwD,OAAON,MAC/BwC,iBAAgB,GAAA7C,OAAKrB,KAAKxB,MAAMwD,OAAOgD,KAAKpG,UAA5B,KAAAyC,OAAyCrB,KAAKxB,MAAMwD,OAAOgD,KAAKnG,UAChFsF,kBAAmBnE,KAAKxB,MAAMwD,OAAOkD,cAEzC9E,EAAAC,EAAAC,cAAC6E,EAAD,CACEZ,gBAAiBvE,KAAKxB,MAAMwD,OAAOuC,gBACnCC,cAAexE,KAAKxB,MAAMwD,OAAOwC,0BAxC5B9D,aAiD3B+D,EAAahB,YAAcrF,EACZqG,gBCxDTW,6MACF5G,MAAQ,CACJI,UAAW,GACXC,SAAU,GACVwG,aAAc,GACd1G,SAAU,GACV2G,gBAAiB,GACjBC,eAAe,EACfC,iBAAiB,KAOrBC,aAAe,SAACC,GACZA,EAAEC,iBADgB,IAAAC,EAEoC1G,EAAKV,MAApD6G,EAFWO,EAEXP,aAAc1G,EAFHiH,EAEGjH,SAAUC,EAFbgH,EAEahH,UAAWC,EAFxB+G,EAEwB/G,SAGvCK,EAAK2G,QAAQ,cAAgB3G,EAAK2G,QAAQ,aAAe3G,EAAK2G,QAAQ,iBAAmB3G,EAAK2G,QAAQ,aAAe3G,EAAK2G,QAAQ,mBAEjItD,IAAMuD,KAAK,aAAc,CACrBlH,YACAC,WACAwG,eACA1G,aAED6D,KAAK,SAAAuB,GACF,IAAMjF,EAASiF,EAAIrB,KAAKN,IAExBlD,EAAKoD,QAAQtD,OAAOqG,EAAc1G,EAAUC,EAAWC,EAAUC,GAAQ,GACzEI,EAAKC,MAAM8D,QAAQC,KAAKhE,EAAKoD,QAAQvD,YAExC4D,MAAM,SAAAC,GAEwB,MAAxBA,EAAIG,SAASC,OAEZ9D,EAAKE,SAAS,CAACmG,eAAe,IAG9BrG,EAAKC,MAAM8D,QAAQC,KAAK,UAE9BL,QAAQC,IAAIF,EAAIG,YAIpB7D,EAAKE,SAAS,CAACoG,iBAAiB,OAQxCO,cAAgB,WACZ,OAAG7G,EAAKV,MAAM+G,cAENnF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,yBAAf,0CAA8EX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAG,WAAT,aAG3E,QAQf+E,aAAe,SAACN,GACZxG,EAAKE,SAALc,OAAA+F,EAAA,EAAA/F,CAAA,GACKwF,EAAEQ,OAAOC,KAAOT,EAAEQ,OAAO1F,WAUlCqF,QAAU,SAACO,GACP,IAAMC,EAAQnH,EAAKV,MAAM6G,aACnBiB,EAAOpH,EAAKV,MAAMG,SAClB4H,EAAcrH,EAAKV,MAAM8G,gBACzBkB,EAAQtH,EAAKV,MAAMI,UACnB6H,EAAQvH,EAAKV,MAAMK,SACzB,OAAQuH,GACJ,IAAK,eACD,MAAO,yBAAyBM,KAAKL,GACzC,IAAK,WACD,MAAO,kBAAkBK,KAAKJ,GAClC,IAAK,kBACD,OAAQA,IAASC,EACrB,IAAK,YACD,MAAO,eAAeG,KAAKF,GAC/B,IAAK,WACD,MAAO,eAAeE,KAAKD,OAavCE,aAAe,SAACR,EAAMQ,GAClB,OAAGzH,EAAKV,MAAMgH,kBAAoBtG,EAAK2G,QAAQM,GAEpC/F,EAAAC,EAAAC,cAAA,SAAOS,UAAU,iBAAiB4F,GAElC,8EAKX,OACIvG,EAAAC,EAAAC,cAAA,OAAKS,UAAU,UACXX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2BACXX,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMsG,SAAU5G,KAAKyF,cAIhBzF,KAAK+F,gBACN3F,EAAAC,EAAAC,cAAA,WAAMN,KAAK2G,aAAa,YAAa,kBAAkBvG,EAAAC,EAAAC,cAAA,SAAOuG,SAAU7G,KAAKgG,aAAcnB,GAAG,YAAYsB,KAAK,YAAYW,KAAK,OAAO/F,UAAU,GAAGgG,YAAY,gBAChK3G,EAAAC,EAAAC,cAAA,WAAMN,KAAK2G,aAAa,WAAW,kBAAkBvG,EAAAC,EAAAC,cAAA,SAAOuG,SAAU7G,KAAKgG,aAAcnB,GAAG,WAAWsB,KAAK,WAAWW,KAAK,OAAO/F,UAAU,GAAGgG,YAAY,eAC5J3G,EAAAC,EAAAC,cAAA,WAAMN,KAAK2G,aAAa,eAAe,kDAAkDvG,EAAAC,EAAAC,cAAA,SAAOuG,SAAU7G,KAAKgG,aAAcnB,GAAG,eAAesB,KAAK,eAAeW,KAAK,OAAO/F,UAAU,GAAGgG,YAAY,mBACxM3G,EAAAC,EAAAC,cAAA,WAAMN,KAAK2G,aAAa,WAAW,iDAAiDvG,EAAAC,EAAAC,cAAA,SAAOuG,SAAU7G,KAAKgG,aAAcnB,GAAG,WAAWsB,KAAK,WAAWW,KAAK,WAAW/F,UAAU,GAAGgG,YAAY,cAC/L3G,EAAAC,EAAAC,cAAA,WAAMN,KAAK2G,aAAa,kBAAkB,yCAAyCvG,EAAAC,EAAAC,cAAA,SAAOuG,SAAU7G,KAAKgG,aAAcnB,GAAG,kBAAkBsB,KAAK,kBAAkBW,KAAK,WAAW/F,UAAU,GAAGgG,YAAY,sBAC5M3G,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBAAsBX,EAAAC,EAAAC,cAAA,UAAQS,UAAU,SAAS+F,KAAK,UAAhC,WAAyD1G,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMD,UAAU,0BAA0BE,GAAG,KAA7C,aAGtGb,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,yCAAgCF,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAG,WAAT,cAAhC,yBA3IKP,aAkJzB0E,EAAW3B,YAAcrF,EACVgH,QCnJT4B,6MACLxI,MAAQ,CACP6G,aAAc,GACd1G,SAAU,GACVsI,iBAAiB,EACjBC,cAAc,EACdC,oBAAsB,MAQvB1B,aAAe,SAAAC,GACdA,EAAEC,iBADiB,IAAAC,EAEgB1G,EAAKV,MAAhC6G,EAFWO,EAEXP,aAAc1G,EAFHiH,EAEGjH,SAGlB0G,EAAa+B,OAAS,GAAKzI,EAASyI,OAAS,EAEhD7E,IAAMtC,IAAI,aAAc,CACtB6D,KAAM,CACLpF,SAAU2G,EACV1G,SAAUA,KAGX6D,KAAK,SAAAuB,GACL,GAAmB,MAAfA,EAAIf,QAAiC,MAAfe,EAAIf,OAAgB,CAC7C,IAAMpE,EAAYmF,EAAIrB,KAAK,GAAG9D,UACxBC,EAAWkF,EAAIrB,KAAK,GAAG7D,SACvBC,EAASiF,EAAIrB,KAAK,GAAGN,IAG3BlD,EAAKoD,QAAQtD,OAAOqG,EAAc1G,EAAUC,EAAWC,EAAUC,GAAQ,GACzEI,EAAKC,MAAM8D,QAAQC,KAAKhE,EAAKoD,QAAQvD,aAGtC4D,MAAM,SAAAC,GACNC,QAAQC,IAAIF,GAEgB,MAAxBA,EAAIG,SAASC,OAChB9D,EAAKE,SAAS,CACb8H,cAAe,EACfC,oBAAsBvE,EAAIG,SAASL,KAAKwE,gBAIzChI,EAAKC,MAAM8D,QAAQC,KAAK,UACxBL,QAAQC,IAAIF,MAKf1D,EAAKE,SAAS,CAAC6H,iBAAiB,OASlCjB,aAAe,SAACN,GAAM,IAAA2B,EACrBnI,EAAKE,UAALiI,EAAA,GAAAnH,OAAA+F,EAAA,EAAA/F,CAAAmH,EACE3B,EAAEQ,OAAOC,KAAOT,EAAEQ,OAAO1F,OAD3BN,OAAA+F,EAAA,EAAA/F,CAAAmH,EAAA,gBAEgB,GAFhBA,OAaEV,aAAe,SAACR,EAAMQ,GAClB,OAAGzH,EAAKV,MAAMyI,iBAAwC,KAArB/H,EAAKV,MAAM2H,GACjC/F,EAAAC,EAAAC,cAAA,QAAMS,UAAU,iBAAiB4F,GAEjC,8EAKjB,OACCvG,EAAAC,EAAAC,cAAA,OAAKS,UAAU,UACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2BACdX,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,QAAMsG,SAAU5G,KAAKyF,cACpBrF,EAAAC,EAAAC,cAAA,WACEN,KAAKxB,MAAM0I,cAAgB9G,EAAAC,EAAAC,cAAA,QAAMS,UAAU,iBAAiBf,KAAKxB,MAAM2I,qBACvEnH,KAAK2G,aAAa,eAAgB,qCACnCvG,EAAAC,EAAAC,cAAA,SACCuG,SAAU7G,KAAKgG,aACfnB,GAAG,eACHsB,KAAK,eACLW,KAAK,OACL/F,UAAU,GACVgG,YAAY,mBAGd3G,EAAAC,EAAAC,cAAA,WACEN,KAAK2G,aAAa,WAAY,gCAC/BvG,EAAAC,EAAAC,cAAA,SACCuG,SAAU7G,KAAKgG,aACfnB,GAAG,WACHsB,KAAK,WACLW,KAAK,WACL/F,UAAU,GACVgG,YAAY,cAGd3G,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACdX,EAAAC,EAAAC,cAAA,UAAQS,UAAU,SAAS+F,KAAK,UAAhC,WAGA1G,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMD,UAAU,0BAA0BE,GAAG,KAA7C,aAIHb,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,uCAA8BF,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAG,WAAT,cAA9B,yBA5HoBP,aAkIzBsG,EAAWvD,YAAcrF,EACV4I,QCnITM,6MACF9I,MAAQ,CACJkD,MAAQ,GACRwD,YAAa,GACbV,cAAe,GACfD,gBAAiB,GACjBiB,iBAAkB,KAOtBC,aAAe,SAACC,GAEZA,EAAEC,iBAFgB,IAAAC,EAI4C1G,EAAKV,MAA3DkD,EAJUkE,EAIVlE,MAAOwD,EAJGU,EAIHV,YAAaV,EAJVoB,EAIUpB,cAAeD,EAJzBqB,EAIyBrB,gBAJzBgD,EAKWrI,EAAKoD,QAA3B5D,EALW6I,EAKX7I,SAAUC,EALC4I,EAKD5I,SAGdO,EAAKsI,cAAc,UAAYtI,EAAKsI,cAAc,gBAAkBtI,EAAKsI,cAAc,kBAAoBtI,EAAKsI,cAAc,mBAE7HjF,IAAM,CACFkF,OAAS,OACT3D,KAAO,CACHpF,WACAC,YAEJ+I,IAAM,eACNhF,KAAO,CACHhB,QACAwD,cACAV,gBACAD,qBAEL/B,KAAK,SAACuB,GAGL,IAAMtE,EAAOsE,EAAI4D,QAAQ5I,SACzBG,EAAKC,MAAM8D,QAAQC,KAAKzD,KACzBkD,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZ1D,EAAKC,MAAM8D,QAAQC,KAAK,YAI5BhE,EAAKE,SAAS,CAACoG,iBAAkB,OAOzCQ,aAAe,SAACN,GACZxG,EAAKE,SAALc,OAAA+F,EAAA,EAAA/F,CAAA,GACKwF,EAAEQ,OAAOC,KAAOT,EAAEQ,OAAO1F,WAUlCoH,mBAAqB,SAACjB,EAAcP,GAEhC,GAAGlH,EAAKV,MAAMgH,kBAAoBtG,EAAKsI,cAAcpB,GACjD,OACIhG,EAAAC,EAAAC,cAAA,QAAMS,UAAU,iBAAiB4F,MAU7CkB,KAAO,SAACC,GACJ,OAAOA,EAAIC,QAAQ,iBAAiB,OAQxCP,cAAgB,SAACpB,GACb,IAAMnC,EAAc/E,EAAKV,MAAMkD,MACzBsG,EAAsB9I,EAAKV,MAAMgG,cACjCL,EAAoBjF,EAAK2I,KAAK3I,EAAKV,MAAM0G,aACzC+C,EAAkB/I,EAAK2I,KAAK3I,EAAKV,MAAM+F,iBAC7C,OAAQ6B,GACJ,IAAK,QACD,MAAO,4BAA4BM,KAAKzC,GAC5C,IAAK,cACD,MAAO,4BAA4ByC,KAAKvC,GAC5C,IAAK,gBACD,MAAO,4BAA4BuC,KAAKsB,GAC5C,IAAK,kBACD,MAAO,4BAA4BtB,KAAKuB,6EAMhD,OACI7H,EAAAC,EAAAC,cAAA,OAAKS,UAAU,yBACXX,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMsG,SAAU5G,KAAKyF,cACjBrF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACXX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACXX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,iBAAgBX,EAAAC,EAAAC,cAAA,OAAKiB,IAAKC,EAAQ,IAA+BC,IAAI,WAAWV,UAAU,qBAAxG,WAA0If,KAAK4H,mBAAmB,cAAe,UACjLxH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOuG,SAAU7G,KAAKgG,aAAcnB,GAAG,QAAQsB,KAAK,QAAQW,KAAK,OAAO/F,UAAU,mCAAmCgG,YAAY,qBACtI3G,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,OAAKiB,IAAKC,EAAQ,IAA6BC,IAAI,WAAWV,UAAU,qBAA3E,OAAyGf,KAAKsC,QAAQ1D,UAAtH,IAAkIoB,KAAKsC,QAAQzD,WAEnJuB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACXX,EAAAC,EAAAC,cAAA,gCAAwBN,KAAK4H,mBAAmB,cAAe,gBAC/DxH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,YAAUuG,SAAU7G,KAAKgG,aAAcnB,GAAG,cAAcsB,KAAK,cAAcpF,UAAU,GAAGgG,YAAY,6BAGjH3G,EAAAC,EAAAC,cAAA,OAAKS,UAAU,sBACXX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBACXX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,uBACVX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,6BACVX,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,OAAKiB,IAAKC,EAAQ,IAAmCC,IAAI,WAAWV,UAAU,qBAAlF,mBAA4Hf,KAAK4H,mBAAmB,cAAe,kBACnKxH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOuG,SAAU7G,KAAKgG,aAAcnB,GAAG,gBAAgBsB,KAAK,gBAAgBW,KAAK,OAAO/F,UAAU,sBAAsBgG,YAAY,YAE7I3G,EAAAC,EAAAC,cAAA,MAAIS,UAAU,6BACVX,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,OAAKiB,IAAKC,EAAQ,IAA8BC,IAAI,WAAWV,UAAU,qBAA7E,qBAAyHf,KAAK4H,mBAAmB,cAAe,oBAChKxH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,YAAUuG,SAAU7G,KAAKgG,aAAcnB,GAAG,kBAAkBsB,KAAK,kBAAkBpF,UAAU,GAAGgG,YAAY,2BAKjI3G,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBAAsBX,EAAAC,EAAAC,cAAA,UAAQS,UAAU,SAAS+F,KAAK,UAAhC,iBAA+D1G,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,2BAAvB,qBA1IjGL,aAkJ3B4G,EAAa7D,YAAcrF,EACZkJ,QCnJTY,6MACF1J,MAAQ,CACJoD,SAAU,EACVF,MAAQ,GACRwD,YAAc,GACdV,cAAgB,GAChBD,gBAAkB,GAClBS,KAAO,GACPQ,iBAAkB,KAkCtBC,aAAe,SAACC,GAEZA,EAAEC,iBAFgB,IAAAC,EAI4D1G,EAAKV,MAA3EkD,EAJUkE,EAIVlE,MAAOwD,EAJGU,EAIHV,YAAaV,EAJVoB,EAIUpB,cAAeD,EAJzBqB,EAIyBrB,gBAAiBS,EAJ1CY,EAI0CZ,KAAM1D,EAJhDsE,EAIgDtE,SAG/DpC,EAAKsI,cAAc,UAAYtI,EAAKsI,cAAc,gBAAkBtI,EAAKsI,cAAc,kBAAoBtI,EAAKsI,cAAc,oBAA+B,KAATxC,EAEnJzC,IAAM,CACFkF,OAAS,MACTC,IAAG,qCAAArG,OAAwCC,GAC3CwC,KAAM,CACFpF,SAAUQ,EAAKoD,QAAQ5D,SACvBC,SAAUO,EAAKoD,QAAQ3D,UAE3B+D,KAAO,CACHhB,QACAwD,cACAV,gBACAD,qBAEL/B,KAAK,WAEJtD,EAAKC,MAAM8D,QAAQC,KAAnB,YAAA7B,OAAoCnC,EAAKV,MAAM8C,aAChDqB,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZ1D,EAAKC,MAAM8D,QAAQC,KAAK,YAI5BhE,EAAKE,SAAS,CAACoG,iBAAkB,OASzCQ,aAAe,SAACN,GACZxG,EAAKE,SAALc,OAAA+F,EAAA,EAAA/F,CAAA,GACKwF,EAAEQ,OAAOC,KAAOT,EAAEQ,OAAO1F,WAWlCoH,mBAAqB,SAACjB,EAAcP,GAEhC,GAAGlH,EAAKV,MAAMgH,kBAAoBtG,EAAKsI,cAAcpB,GACjD,OACIhG,EAAAC,EAAAC,cAAA,QAAMS,UAAU,iBAAiB4F,MAW7CkB,KAAO,SAACC,GACJ,OAAOA,EAAIC,QAAQ,iBAAiB,OASxCP,cAAgB,SAACpB,GACb,IAAMnC,EAAc/E,EAAKV,MAAMkD,MACzBsG,EAAsB9I,EAAKV,MAAMgG,cACjCL,EAAoBjF,EAAK2I,KAAK3I,EAAKV,MAAM0G,aACzC+C,EAAkB/I,EAAK2I,KAAK3I,EAAKV,MAAM+F,iBAC7C,OAAQ6B,GACJ,IAAK,QAED,OADAvD,QAAQC,IAAI,4BAA4B4D,KAAKzC,IACtC,4BAA4ByC,KAAKzC,GAC5C,IAAK,cACD,MAAO,4BAA4ByC,KAAKvC,GAC5C,IAAK,gBAED,OADJtB,QAAQC,IAAI,4BAA4B4D,KAAKsB,IAClC,4BAA4BtB,KAAKsB,GAC5C,IAAK,kBAED,OADAnF,QAAQC,IAAI,4BAA4B4D,KAAKuB,IACtC,4BAA4BvB,KAAKuB,yFA1H/B,IAAA5F,EAAArC,KACXsB,EAAWtB,KAAKb,MAAMwF,MAAMC,OAAOC,GACzCtC,IAAMtC,IAAN,gBAAAoB,OAA0BC,IACnBkB,KAAK,SAAAsC,GAAU,IAAAqD,EACiDrD,EAAOpC,KAA9DhB,EADMyG,EACNzG,MAAOwD,EADDiD,EACCjD,YAAaV,EADd2D,EACc3D,cAAeD,EAD7B4D,EAC6B5D,gBACrCS,EAAOF,EAAOpC,KAAKsC,KAAK5C,IAG9B,GAAG4C,IAAS3C,EAAKC,QAAQxD,OACrB,OAAOuD,EAAKlD,MAAM8D,QAAQC,KAAK,cAEnCb,EAAKjD,SAAS,CACZwC,SAAU,EACVF,QACAwD,cACAV,gBACAD,kBACAS,OACA1D,eAGHqB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCA4GhC,OACIxC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,yBACXX,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMsG,SAAU5G,KAAKyF,cACjBrF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WAEXX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACXX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,iBAAgBX,EAAAC,EAAAC,cAAA,OAAKiB,IAAKC,EAAQ,IAAkCC,IAAI,WAAWV,UAAU,qBAA3G,WAA6If,KAAK4H,mBAAmB,cAAe,UACpLxH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOuG,SAAU7G,KAAKgG,aAAcnB,GAAG,QAAQsB,KAAK,QAAQW,KAAK,OAAO/F,UAAU,mCAAmCgG,YAAa/G,KAAKxB,MAAMkD,MAAOlB,MAAOR,KAAKxB,MAAMkD,SAC3KtB,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,OAAKiB,IAAKC,EAAQ,IAAgCC,IAAI,WAAWV,UAAU,qBAA9E,OAA4Gf,KAAKsC,QAAQ1D,UAAzH,IAAqIoB,KAAKsC,QAAQzD,WAGtJuB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACXX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,iBAAd,eAA2Cf,KAAK4H,mBAAmB,cAAe,gBAClFxH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,YAAUuG,SAAU7G,KAAKgG,aAAcnB,GAAG,cAAcsB,KAAK,cAAcpF,UAAU,GAAGgG,YAAa/G,KAAKxB,MAAM0G,YAAa1E,MAAOR,KAAKxB,MAAM0G,iBAK5J9E,EAAAC,EAAAC,cAAA,OAAKS,UAAU,sBAEXX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBACXX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,uBAEVX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,6BACVX,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,OAAKiB,IAAKC,EAAQ,IAAsCC,IAAI,WAAWV,UAAU,qBAArF,mBAA+Hf,KAAK4H,mBAAmB,cAAe,kBACtKxH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOuG,SAAU7G,KAAKgG,aAAcnB,GAAG,gBAAgBsB,KAAK,gBAAgBW,KAAK,OAAO/F,UAAU,sBAAsBgG,YAAa/G,KAAKxB,MAAMgG,cAAehE,MAAOR,KAAKxB,MAAMgG,kBAG1LpE,EAAAC,EAAAC,cAAA,MAAIS,UAAU,6BACVX,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,OAAKiB,IAAKC,EAAQ,IAAiCC,IAAI,WAAWV,UAAU,qBAAhF,qBAA4Hf,KAAK4H,mBAAmB,cAAe,oBACnKxH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,YAAUuG,SAAU7G,KAAKgG,aAAcnB,GAAG,kBAAkBsB,KAAK,kBAAkBpF,UAAU,GAAGgG,YAAa/G,KAAKxB,MAAM+F,gBAAiB/D,MAAOR,KAAKxB,MAAM+F,uBAOhLnE,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBAAsBX,EAAAC,EAAAC,cAAA,UAAQS,UAAU,SAAS+F,KAAK,UAAhC,iBAA+D1G,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAG,IAAGF,UAAU,2BAAtB,qBAtLjGL,aA6L3BwH,EAAazE,YAAcrF,EACZ8J,yBCzKAE,EAtBM,SAAAC,GAAuC,IAAzB3H,EAAyB2H,EAApCC,UAAyBC,EAAWrI,OAAAsI,EAAA,EAAAtI,CAAAmI,EAAA,eAAAxH,EAGNC,qBAAW1C,GAAtDK,EAHiDoC,EAGjDpC,cAAemB,EAHkCiB,EAGlCjB,eAAgBb,EAHkB8B,EAGlB9B,SAEhC0J,EAAkBvI,OAAAC,EAAA,EAAAD,CAAA,GAAIqI,EAAKxJ,UAAUc,SAErCA,EAA+B,oBAApB4I,EAAwC,UAAY,aAQrE,OALAC,oBAAU,WACN9I,EAAe6I,IACjB,CAAC1J,IAICqB,EAAAC,EAAAC,cAACqI,EAAA,EAADzI,OAAA0I,OAAA,GAAWL,EAAX,CAAiBM,OAAQ,SAAA1J,GAAK,OAC1BV,EAAgB2B,EAAAC,EAAAC,cAACI,EAAcvB,GAAYiB,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAU7H,GAAIpB,SCctDkJ,6MAhCXvK,MAAQ,CACJwK,MAAO,KACPC,UAAY,uFAOED,EAAOC,GACrBjJ,KAAKZ,SAAS,CAAC4J,QAAOC,+CAKtB,OAAGjJ,KAAKxB,MAAMwK,MAEN5I,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACXX,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,WAAS4I,MAAO,CAAEC,WAAY,aACzBnJ,KAAKxB,MAAMyK,UAAUG,iBAM3BpJ,KAAKb,MAAMsB,gBA3BFC,aCUb2I,EATK,WAChB,OACIjJ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACXX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMD,UAAU,SAASE,GAAG,KAA5B,WACAb,EAAAC,EAAAC,cAAA,yECJNgJ,+LAGEtJ,KAAKsC,QAAQ5C,UACbM,KAAKb,MAAM8D,QAAQC,KAAK,sCAIxB,OAAO,YARWxC,aAW1B4I,EAAY7F,YAAcrF,EACXkL,QCJAC,EATG,WACd,OACInJ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACXX,EAAAC,EAAAC,cAAA,iEACAF,EAAAC,EAAAC,cAAA,yDCqDGkJ,mLAhCX,OACEpJ,EAAAC,EAAAC,cAACmJ,EAAD,KACErJ,EAAAC,EAAAC,cAACoJ,EAAD,KACEtJ,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,KACEvJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACIf,EAAAC,EAAAC,cAACsJ,EAAD,MACAxJ,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,KACEzJ,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOmB,OAAK,EAACrK,KAAK,IAAI6I,UAAW3G,IAEjCvB,EAAAC,EAAAC,cAACyJ,EAAD,CAAcD,OAAK,EAACrK,KAAK,kBAAkB6I,UAAWhB,IACtDlH,EAAAC,EAAAC,cAACyJ,EAAD,CAAcD,OAAK,EAACrK,KAAK,sBAAsB6I,UAAWJ,IAE1D9H,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOmB,OAAK,EAACrK,KAAK,eAAe6I,UAAW7D,IAE5CrE,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOmB,OAAK,EAACrK,KAAK,UAAU6I,UAAWlD,IACvChF,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOmB,OAAK,EAACrK,KAAK,UAAU6I,UAAWtB,IACvC5G,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOmB,OAAK,EAACrK,KAAK,WAAW6I,UAAWgB,IAExClJ,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOmB,OAAK,EAACrK,KAAK,aAAa6I,UAAWiB,IAC1CnJ,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOmB,OAAK,EAACrK,KAAK,SAAS6I,UAAWe,IACtCjJ,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOmB,OAAK,EAACrK,KAAK,YAAY6I,UAAW5E,IACzCtD,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOL,UAAW5E,gBAzBlBhD,aClBlBsJ,IAASnB,OACLzI,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,KACI7J,EAAAC,EAAAC,cAAC4J,EAAD,OAEAC,SAASC,eAAe,6BCThCC,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qHCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.f669f69c.chunk.js","sourcesContent":["import React, { Component} from 'react';\nimport { withCookies } from 'react-cookie';\n//Create context\nexport const UserContext = React.createContext();\n\nclass UserProvider extends Component {\n    state = {\n        authenticated : null,\n        username : null,\n        password : null,\n        firstName : null,\n        lastName : null,\n        userId : null,\n        location : '/'\n      }\n\n      /**\n      * Will return an error message if the user tries to submit the form without all inputs correctly filled out\n      * @param  {string} userName - users email\n      * @param  {string} password - users password\n      * @param  {string} firstName - users first name\n      * @param  {string} lastName - users last name\n      * @param  {string} userId - random user id\n      * @param {boolean} authenticated \n      */\n      signIn = (username, password, firstName, lastName, userId, authenticated) => {\n\n        //if authenticated is true set the state\n        if(authenticated){\n          const { cookies } = this.props;\n          this.setState({\n            authenticated,\n            username,\n            firstName,\n            lastName,\n            password,\n            userId\n          })\n          //then set cookies the same values, cookies are used as a backup\n          const userCookie = {\n            authenticated,\n            username,\n            firstName,\n            lastName,\n            password,\n            userId\n          };\n          cookies.set('user', JSON.stringify(userCookie), { path: '/' });\n        } else {\n          //authnticated = false so to be sure update all values to null\n          this.setState({\n            authenticated : false,\n            username : null,\n            password : null,\n            firstName : null,\n            lastName: null,\n            userId : null\n          })\n        }\n      }\n\n\n      /**\n      * signs a user out by setting global state to null && clears the cookies\n      */\n      signOut = () => {\n        const { cookies } = this.props;\n        this.setState({\n          authenticated: null,\n          username: null,\n          password: null,\n          firstName : null,\n          lastName : null,\n          userId : null,\n          location : '/'\n        })\n        cookies.remove('user', { path: '/' });\n      }\n\n\n      /**\n      * Some routes call update location to keep the url, so when a user signs in/signs up they can be directed to the correct page\n      * @param {string} pathname - url to update location\n      */\n      updateLocation = (pathname) => {\n        this.setState({location : pathname});\n      }\n\n    render(){\n      //user info will hold the state or cookies as backup\n      let userInfo;\n      const { cookies } = this.props;\n      //get user cookie\n      const userCookies = cookies.get('user');\n\n      //if this.state doesn't hold a user, check to see if cookies does, if so, use the cookies data\n      if(!this.state.authenticated && userCookies){\n        userInfo = userCookies;\n      } else {\n        //this.state already holds the data, so use that\n        userInfo = {...this.state}\n      }\n        return(\n            <UserContext.Provider value={{\n                ...userInfo,\n                signIn : this.signIn,\n                signOut : this.signOut,\n                updateLocation : this.updateLocation\n            }}>\n                {this.props.children}\n            </UserContext.Provider>\n        )\n    }\n}\n\nexport default withCookies(UserProvider);","import React, {useContext} from 'react';\nimport {Link} from 'react-router-dom';\nimport {UserContext} from '../context/UserProvider';\n\nconst Nav = (props) => {\n  //Get firstName and signout method from context\n  const {firstName, signOut} = useContext(UserContext);\n\n    return (\n      <div className=\"header\">\n        <div className=\"bounds\">\n          <Link to=\"/\"><h1 className=\"header--logo\">Courses</h1></Link>\n          {/* {If firstName exists then a user is logged in, so welcome and signout are rendered, otherwise signin and signup} */}\n          <nav>{firstName ?\n                <div>\n                  <span>Welcome {firstName}</span>\n                  <Link className=\"signout\" to=\"/\" onClick={signOut}>Sign Out</Link>\n                </div>  \n                :\n                <>\n                  <Link className=\"signup\" to=\"/signup\">Sign Up</Link>\n                  <Link className=\"signin\" to=\"/signin\">Sign In</Link>\n                </>\n                }\n          </nav>\n        </div>\n      </div>\n    )\n}\n\nexport default Nav;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n//renders 1 course component\nconst Course = (props) => {\n    return (\n        <div className=\"grid-33\">\n            <Link className=\"course--module course--link\" to={`courses/${props.courseId}`}>\n                <h4 className=\"course--label\">Course</h4>\n                <h3 className=\"course--title\"><img src={require('../img/svg/008-online-learning.svg')} alt=\"learning\" className=\"course-title-svg\"></img> {props.title}</h3>\n            </Link>\n        </div>\n    )\n}\n\nexport default Course;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Course from './Course';\nimport {UserContext} from '../context/UserProvider';\n\n\nclass Courses extends Component {\n  state = {\n    loading : false,\n    courses : []\n  }\n\n    /**\n     * Will return an error message if the user tries to submit the form without all inputs correctly filled out\n     */\n  componentWillMount() {\n    this.context.updateLocation('/');\n    this.setState({loading : true});\n\n    //make get request for all courses\n    axios.get('/api/courses')\n          .then(results => {\n            const courses = results.data.courses;\n            this.setState({\n              courses,\n              loading : false\n            })\n          })\n          .catch(err => {\n            console.log(err);\n            //server error, render error page\n            if(err.response.status === 500){\n              this.props.history.push('/error');\n            }\n          })\n  }\n\n    /**\n     * Creates a course component for each course in the courses array.\n     * @returns {string} an individual course component rendered to html\n     */\n  courseCreator = () => {\n      let courses = this.state.courses;\n      return courses.map((course, index) => {\n          return (\n              <Course \n                  key={index}\n                  courseId={course._id}\n                  title={course.title}\n              />\n          )\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"bounds\">\n        {this.courseCreator()}\n        <div className=\"grid-33\">\n            <Link className=\"course--module course--add--module\" to=\"/courses/create\">\n                <h3 className=\"course--add--title\"><svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                viewBox=\"0 0 13 13\" className=\"add\">\n                <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon>\n              </svg>New Course</h3>\n            </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nCourses.contextType = UserContext;\nexport default Courses;","import React from 'react';\n\nconst NotFound = () => {\n    return (\n        <div className=\"error-block\">\n            <h1>404 : Not Found</h1>\n            <p>Sorry! We couldn't find the page you're looking for.</p>\n        </div>\n    )\n}\n\nexport default NotFound;","import React, {useContext} from 'react';\nimport { Link, withRouter} from 'react-router-dom';\nimport {UserContext} from '../../context/UserProvider';\nimport axios from 'axios';\n\nconst ActionBar = (props) => {\n    //Destructure UserContext\n    const {userId, username, password} = useContext(UserContext);\n\n    /*\n    ** Makes a DELETE req to API then redirects to homepage\n    */\n    const deleteCourse = () => {\n        axios.delete(`/api/courses/${props.courseId}`, {\n            auth : {\n                username,\n                password\n            }\n        }).then(res => {\n            //redirect user to homepage\n            props.history.push('/');\n        }).catch(err => {\n            props.history.push('/error');\n            console.log(err);\n        })\n    }\n    return (\n        <div className=\"actions--bar\">\n            <div className=\"bounds\">\n                <div className=\"grid-100\">\n                    <span>\n                        {/* {If the user doesn't own the course update and delete buttons are not rendered } */}\n                        {userId === props.courseUserId && (\n                            <>\n                                <Link className=\"button\" to={`/courses/${props.courseId}/update`}>Update Course</Link>\n                                <button className=\"button\" onClick={deleteCourse}>Delete Course</button>\n                            </>\n                        )}\n                    </span>\n                    <Link className=\"button button-secondary\" to=\"/\">Return to List</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(ActionBar);","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nconst CourseContent = (props) => {\n    const {courseTitle, courseInstructor, courseDescription} = props;\n\n    return (\n        <div className=\"grid-66\">\n            <div className=\"course--header\">\n                <h4 className=\"course--label\"><img src={require('../../img/svg/007-content.svg')} alt=\"windmill\" className=\"course-title-svg\"></img> Course</h4>\n                <h3 className=\"course--title\">{courseTitle}</h3>\n                <p><img src={require('../../img/svg/001-woman.svg')} alt=\"windmill\" className=\"course-title-svg\"></img> By {courseInstructor}</p>\n            </div>\n            <div className=\"course--description\">\n                <ReactMarkdown source={courseDescription}></ReactMarkdown>\n            </div>\n        </div>\n    )\n}\n\nexport default CourseContent;","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nconst CourseMaterial = (props) => {\n    \n    const {materialsNeeded, estimatedTime} = props;\n\n    return (\n        <div className=\"grid-25 grid-right\">\n            <div className=\"course--stats\">\n                <ul className=\"course--stats--list\">\n                    <li className=\"course--stats--list--item\">\n                        <h4><img src={require('../../img/svg/004-alarm-clock.svg')} alt=\"windmill\" className=\"course-title-svg\"></img> Estimated Time</h4>\n                        <h3>{estimatedTime}</h3>\n                    </li>\n                    <li className=\"course--stats--list--item\">\n                        <h4><img src={require('../../img/svg/002-pencil.svg')} alt=\"windmill\" className=\"course-title-svg\"></img> Materials Needed</h4>\n                        <ul>\n                            <ReactMarkdown source={materialsNeeded}></ReactMarkdown>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default CourseMaterial;","import React, {Component} from 'react';\nimport axios from 'axios';\n\n//import components\nimport ActionBar from './ActionBar';\nimport CourseContent from './CourseContent';\nimport CourseMaterial from './CourseMaterial';\n\n//import context\nimport {UserContext} from '../../context/UserProvider';\n\nclass CourseDetail extends Component {\n    state = {\n        loading : true,\n        course : []\n      }\n\n      //When component mounts update context location and fetch the courses\n      componentDidMount() {\n        const query = this.props.match.params.id;\n        this.context.updateLocation(`/courses/${query}`);\n        //fetch the courses and update state\n        axios.get(`/api/courses/${query}`)\n              .then(result => {\n                this.setState({\n                  course : result.data,\n                  loading : false\n                })\n              })\n              .catch(err => {\n                //Error, redirect the user to error notfound path\n                this.props.history.push('/notfound');\n                console.log(err);\n              })\n      }\n      \n      render () {\n        return (\n          <div>\n              <div className=\"bounds course--detail\">\n                {/* {If courses haven't yet finished fetching display loading} */}\n                {this.state.loading ? <h1>Loading</h1> : \n                  <>\n                    <ActionBar courseId={this.state.course._id} courseUserId={this.state.course.user._id}/>\n                    <CourseContent \n                        courseTitle={this.state.course.title} \n                        courseInstructor={`${this.state.course.user.firstName} ${this.state.course.user.lastName}`} \n                        courseDescription={this.state.course.description}\n                    />\n                    <CourseMaterial \n                      materialsNeeded={this.state.course.materialsNeeded}\n                      estimatedTime={this.state.course.estimatedTime}\n                    />\n                  </>\n                  }\n              </div>\n          </div>\n        )\n      }\n}\nCourseDetail.contextType = UserContext;\nexport default CourseDetail;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport {UserContext} from '../../context/UserProvider';\n\nclass UserSignUp extends Component {\n    state = {\n        firstName: '',\n        lastName: '',\n        emailAddress: '',\n        password: '',\n        confirmPassword: '',\n        alreadyExists: false,\n        attemptedSubmit: false\n    }\n\n    /**\n     * handles the form being submitted by making a post request with user name and password\n     * @param  {Object} e - event object\n     */\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const {emailAddress, password, firstName, lastName} = this.state;\n\n        //call validators\n        if(this.isValid('firstName') && this.isValid('lastName') && this.isValid('emailAddress') && this.isValid('password') && this.isValid('confirmPassword')){\n            //all good, make the request\n            axios.post('/api/users', {\n                firstName,\n                lastName,\n                emailAddress,\n                password\n            })\n              .then(res => {\n                  const userId = res.data._id;\n                  //update context then redirect user\n                  this.context.signIn(emailAddress, password, firstName, lastName, userId, true);\n                  this.props.history.push(this.context.location);\n              })\n              .catch(err => {\n                  //check if error is conflict(already existing user)\n                  if(err.response.status === 409){\n                      //conflict, display error\n                      this.setState({alreadyExists: true});\n                  } else {\n                      //server error, render error component\n                      this.props.history.push('/error');\n                  }\n                console.log(err.response);\n              });\n        }else {\n            //didn't pass clientside validation, set attempted submit to true to display error messages\n            this.setState({attemptedSubmit: true});\n        }\n    }\n\n     /**\n     * Checks to see if alreadyExists : true, displays error message\n     * @returns  {string} html error message string or null\n     */\n    checkIfExists = () => {\n        if(this.state.alreadyExists){\n            return(\n                <div className=\"validation--duplicate\">Looks like you already have an account:<Link to=\"/signin\"> Sign In</Link></div>\n            );\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * handles interaction on inputs, updates the state that matches the input name, reset access denied\n     * @param  {Object} e - Event object\n     */\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n\n    /**\n     * Tests a value in this.state and returns a boolean\n     * @param  {string} InputName - name assigned to the input e.g. 'description'\n     * @returns {boolean} \n     */\n    isValid = (inputName) => {\n        const email = this.state.emailAddress;\n        const pass = this.state.password;\n        const confirmPass = this.state.confirmPassword;\n        const fName = this.state.firstName;\n        const lName = this.state.lastName;\n        switch (inputName) {\n            case 'emailAddress':\n                return /^[^@]+@[^@.]+\\.[a-z]+$/.test(email);\n            case 'password':\n                return /^(?=.*\\d).{8,}$/.test(pass); \n            case 'confirmPassword':\n                return  pass === confirmPass;                     \n            case 'firstName':\n                return /^[a-z A-Z]+$/.test(fName);\n            case 'lastName':\n                return /^[a-z A-Z]+$/.test(lName);\n            default:\n                break;\n        }\n    }\n\n\n    /**\n     * Will return an error message if the user tries to submit the form without all inputs correctly filled out\n     * @param  {string} name - name assigned to the input e.g. 'description'\n     * @param  {string} errorMessage - an error message string \n     * @returns {string} a error message html string to be used as a component\n     */\n    errorMessage = (name, errorMessage) => {\n        if(this.state.attemptedSubmit && !this.isValid(name)){\n            //form has been submitted and this input was incorrectly filled in.\n            return <label className=\"error-message\">{errorMessage}</label>\n        } else {\n            return null;\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"bounds\">\n                <div className=\"grid-33 centered signin\">\n                    <h1>Sign Up</h1>\n                    <div>\n                        <form onSubmit={this.handleSubmit}>\n\n                            {/* {CheckIfExists and errorMessage will display error messages if necessary} */}\n\n                            {this.checkIfExists()}\n                            <div>{this.errorMessage('firstName', 'Required Field')}<input onChange={this.handleChange} id=\"firstName\" name=\"firstName\" type=\"text\" className=\"\" placeholder=\"First Name\" /></div>\n                            <div>{this.errorMessage('lastName','Required Field')}<input onChange={this.handleChange} id=\"lastName\" name=\"lastName\" type=\"text\" className=\"\" placeholder=\"Last Name\" /></div>\n                            <div>{this.errorMessage('emailAddress','Required Field - Must be a valid email address')}<input onChange={this.handleChange} id=\"emailAddress\" name=\"emailAddress\" type=\"text\" className=\"\" placeholder=\"Email Address\" /></div>\n                            <div>{this.errorMessage('password','Required Field - Minimum 8 letters & 1 number')}<input onChange={this.handleChange} id=\"password\" name=\"password\" type=\"password\" className=\"\" placeholder=\"Password\" /></div>\n                            <div>{this.errorMessage('confirmPassword','Oops, your passwords are not the same')}<input onChange={this.handleChange} id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" className=\"\" placeholder=\"Confirm Password\" /></div>\n                            <div className=\"grid-100 pad-bottom\"><button className=\"button\" type=\"submit\">Sign Up</button><Link className=\"button button-secondary\" to=\"/\">Cancel</Link></div>\n                        </form>\n                    </div>\n                    <p>&nbsp;</p>\n                    <p>Already have a user account? <Link to=\"/signin\">Click here</Link> to sign in!</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nUserSignUp.contextType = UserContext;\nexport default UserSignUp;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {UserContext} from '../../context/UserProvider';\n\nclass UserSignIn extends Component {\n\tstate = {\n\t\temailAddress: \"\",\n\t\tpassword: \"\",\n\t\tattemptedSignIn: false,\n\t\taccessDenied: false,\n\t\taccessDeniedMessage : ''\n\t\t\n\t};\n\n\t/**\n     * handles the form being submitted by making a post request with user name and password\n     * @param  {Object} e - event object\n     */\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\t\tconst { emailAddress, password } = this.state;\n\n\t\t//check that the user has entered input in both inputs\n\t\tif (emailAddress.length > 0 && password.length > 0) {\n\t\t\t//all good, make the request\n\t\t\taxios.get(\"/api/users\", {\n\t\t\t\t\tauth: {\n\t\t\t\t\t\tusername: emailAddress,\n\t\t\t\t\t\tpassword: password\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === 200 || res.status === 304) {\n\t\t\t\t\t\tconst firstName = res.data[0].firstName;\n\t\t\t\t\t\tconst lastName = res.data[0].lastName;\n\t\t\t\t\t\tconst userId = res.data[0]._id;\n\n\t\t\t\t\t\t//sign the user in by calling signIn from UserContext, then redirect user to location\n\t\t\t\t\t\tthis.context.signIn(emailAddress, password, firstName, lastName, userId, true);\n\t\t\t\t\t\tthis.props.history.push(this.context.location);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t\t//if err is 403 then forbidden, set state to save error message.\n\t\t\t\t\tif (err.response.status === 403) {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\taccessDenied : true,\n\t\t\t\t\t\t\taccessDeniedMessage : err.response.data.accessDenied\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//server error, redirect and console.log error\n\t\t\t\t\t\tthis.props.history.push('/error');\n\t\t\t\t\t\tconsole.log(err)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} else {\n\t\t\t//user didn't pass clientside validation, but attemted to sign in, so show error messages\n\t\t\tthis.setState({attemptedSignIn: true});\n\t\t}\n\t};\n\n\n\t/**\n     * handles interaction on inputs, updates the state that matches the input name, reset access denied\n     * @param  {Object} e - Event object\n     */\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value,\n\t\t\taccessDenied : false\n\t\t});\n\t};\n\n\n\t/**\n     * Will return an error message if the user tries to submit the form without all inputs correctly filled out\n     * @param  {string} errorMessage - an error message string\n     * @param  {string} inputName - name assigned to the input e.g. 'description'\n     * @returns {string} a error message html string to be used as a component\n     */\n    errorMessage = (name, errorMessage) => {\n        if(this.state.attemptedSignIn && this.state[name] === ''){\n            return <span className=\"error-message\">{errorMessage}</span>\n        } else {\n            return null;\n        }\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"bounds\">\n\t\t\t\t<div className=\"grid-33 centered signin\">\n\t\t\t\t\t<h1>Sign In</h1>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{this.state.accessDenied && <span className=\"error-message\">{this.state.accessDeniedMessage}</span>}\n\t\t\t\t\t\t\t\t{this.errorMessage('emailAddress', 'You must enter your email address')}\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\tid=\"emailAddress\"\n\t\t\t\t\t\t\t\t\tname=\"emailAddress\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tclassName=\"\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email Address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{this.errorMessage('password', 'You must enter your password')}\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tclassName=\"\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"grid-100 pad-bottom\">\n\t\t\t\t\t\t\t\t<button className=\"button\" type=\"submit\">\n\t\t\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<Link className=\"button button-secondary\" to=\"/\">Cancel</Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p>&nbsp;</p>\n\t\t\t\t\t<p>Don't have a user account? <Link to=\"/signup\">Click here</Link> to sign up!</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nUserSignIn.contextType = UserContext;\nexport default UserSignIn;\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport {UserContext} from '../context/UserProvider';\n\nclass CreateCourse extends Component {\n    state = {\n        title : '',\n        description: '',\n        estimatedTime: '',\n        materialsNeeded: '',\n        attemptedSubmit : false\n    }\n\n    /**\n     * handles the form being submitted by making a post request with course info\n     * @param  {Object} e - event object\n     */\n    handleSubmit = (e) => {\n        //prevent default to stop the form submitting\n        e.preventDefault();\n        //destructure state & context\n        const { title, description, estimatedTime, materialsNeeded} = this.state;\n        const {username, password} = this.context;\n\n        //check validation of inputs\n        if(this.validateInput('title') && this.validateInput('description') && this.validateInput('estimatedTime') && this.validateInput('materialsNeeded')){\n            //everything is good, lets make a POST req.\n            axios({\n                method : 'post',\n                auth : {\n                    username,\n                    password\n                },\n                url : '/api/courses',\n                data : {\n                    title,\n                    description,\n                    estimatedTime,\n                    materialsNeeded,\n                }\n            }).then((res) => {\n                //redirect to updated course detail\n                //we should already have the location set by the api\n                const path = res.headers.location;\n                this.props.history.push(path)\n            }).catch(err => {\n                console.log(err);\n                this.props.history.push('/error');\n            })\n        } else {\n            //didnt meet validation, set attemptedSubmit : true to show error messages\n            this.setState({attemptedSubmit : true});\n        }\n    }\n\n    /**\n     * @param  {Object} e - Event object - handles interaction on inputs, updates the state that matches the input name\n     */\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    /**\n     * Creates an error message if user tries to submit the form and the 'inputName' fails validation\n     * @param  {string} errorMessage - an error message string\n     * @param  {string} inputName - name assigned to the input e.g. 'description'\n     * @returns {string} a error message html string to be used as a component\n     */\n    createErrorMessage = (errorMessage, inputName) => {\n        //check if user tried to submit form, if true then display the error message\n        if(this.state.attemptedSubmit && !this.validateInput(inputName)){\n            return (\n                <span className=\"error-message\">{errorMessage}</span>\n            )\n        }\n    }\n\n    /**\n     * Replaces any line breaks in a string\n     * @param  {String} str - String containing courseMaterials or estimatedTime info\n     * @returns {string} returns a new string with line breaks removed\n     */\n    trim = (str) => {\n        return str.replace(/(\\r\\n|\\n|\\r)/gm,\"\");\n    }\n\n    /**\n     * Tests a value in this.state and returns a boolean\n     * @param  {string} InputName - name assigned to the input e.g. 'description'\n     * @returns {boolean} \n     */\n    validateInput = (inputName) => {\n        const courseTitle = this.state.title;\n        const courseEstimatedTime = this.state.estimatedTime;\n        const courseDescription = this.trim(this.state.description);\n        const courseMaterials = this.trim(this.state.materialsNeeded);\n        switch (inputName) {\n            case 'title':\n                return /^(?=.*[A-Z,a-z,\\d]).{3,}$/.test(courseTitle);\n            case 'description':\n                return /^(?=.*[A-Z,a-z,\\d]).{3,}$/.test(courseDescription); \n            case 'estimatedTime':\n                return /^(?=.*[A-Z,a-z,\\d]).{2,}$/.test(courseEstimatedTime);                    \n            case 'materialsNeeded':\n                return /^(?=.*[A-Z,a-z,\\d]).{3,}$/.test(courseMaterials);\n            default:\n                break;\n        }\n    }\n    render(){\n        return(\n            <div className=\"bounds course--detail\">\n                <h1>Create Course</h1>\n                <div>\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"grid-66\">\n                            <div className=\"course--header\">\n                                <h4 className=\"course--label\"><img src={require('../img/svg/007-content.svg')} alt=\"windmill\" className=\"course-title-svg\"></img> Course {this.createErrorMessage('- *Required', 'title')}</h4>\n                                <div><input onChange={this.handleChange} id=\"title\" name=\"title\" type=\"text\" className=\"input-title course--title--input\" placeholder=\"Course title...\" /></div>\n                                <p><img src={require('../img/svg/001-woman.svg')} alt=\"windmill\" className=\"course-title-svg\"></img> By {this.context.firstName} {this.context.lastName}</p>\n                            </div>\n                            <div className=\"course--description\">\n                                <h4>Course Description {this.createErrorMessage('- *Required', 'description')}</h4>\n                                <div><textarea onChange={this.handleChange} id=\"description\" name=\"description\" className=\"\" placeholder=\"Course description...\"></textarea></div>\n                            </div>\n                        </div>\n                        <div className=\"grid-25 grid-right\">\n                            <div className=\"course--stats\">\n                                <ul className=\"course--stats--list\">\n                                    <li className=\"course--stats--list--item\">\n                                        <h4><img src={require('../img/svg/004-alarm-clock.svg')} alt=\"windmill\" className=\"course-title-svg\"></img> Estimated Time {this.createErrorMessage('- *Required', 'estimatedTime')}</h4>\n                                        <div><input onChange={this.handleChange} id=\"estimatedTime\" name=\"estimatedTime\" type=\"text\" className=\"course--time--input\" placeholder=\"Hours\" /></div>\n                                    </li>\n                                    <li className=\"course--stats--list--item\">\n                                        <h4><img src={require('../img/svg/002-pencil.svg')} alt=\"windmill\" className=\"course-title-svg\"></img> Materials Needed {this.createErrorMessage('- *Required', 'materialsNeeded')}</h4>\n                                        <div><textarea onChange={this.handleChange} id=\"materialsNeeded\" name=\"materialsNeeded\" className=\"\" placeholder=\"List materials...\"></textarea></div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"grid-100 pad-bottom\"><button className=\"button\" type=\"submit\">Create Course</button><Link to=\"/\" className=\"button button-secondary\">Cancel</Link></div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nCreateCourse.contextType = UserContext;\nexport default CreateCourse;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {UserContext} from '../../context/UserProvider';\nimport {Link} from 'react-router-dom';\n\nclass UpdateCourse extends Component {\n    state = {\n        loading : true,\n        title : '',\n        description : '',\n        estimatedTime : '',\n        materialsNeeded : '',\n        user : '',\n        attemptedSubmit : false\n      }\n\n    /**\n     * Makes a request to the api to get the course specified in the url\n     */\n    componentWillMount() {\n        const courseId = this.props.match.params.id;\n        axios.get(`/api/courses/${courseId}`)\n              .then(result => {\n                const { title, description, estimatedTime, materialsNeeded } = result.data;\n                const user = result.data.user._id;\n\n                //compare logged in user to course user, if they don't match redirect to forbidden\n                if(user !== this.context.userId){\n                    return this.props.history.push('/forbidden');\n                }\n                this.setState({\n                  loading : false,\n                  title,\n                  description,\n                  estimatedTime,\n                  materialsNeeded,\n                  user,\n                  courseId\n                })\n              })\n              .catch(err => console.log(err))\n    }\n\n    /**\n     * handles the form being submitted by making a post request with course info\n     * @param  {Object} e - event object\n     */\n    handleSubmit = (e) => {\n        //prevent default to ensure form does not submit \n        e.preventDefault();\n        //destructure state\n        const { title, description, estimatedTime, materialsNeeded, user, courseId} = this.state;\n\n        //check validation of inputs\n        if(this.validateInput('title') && this.validateInput('description') && this.validateInput('estimatedTime') && this.validateInput('materialsNeeded') && user !== ''){\n            //everything is good, lets make a PUT req.\n            axios({\n                method : 'put',\n                url : `http://localhost:5000/api/courses/${courseId}`,\n                auth: {\n                    username: this.context.username,\n                    password: this.context.password\n                  },\n                data : {\n                    title,\n                    description,\n                    estimatedTime,\n                    materialsNeeded,\n                }\n            }).then(() => {\n                //redirect to updated course detail\n                this.props.history.push(`/courses/${this.state.courseId}`);\n            }).catch(err => {\n                console.log(err);\n                this.props.history.push('/error');\n            })\n        } else {\n            //form did not submit correctly because of missing fields.\n            this.setState({attemptedSubmit : true});\n        }\n    }\n\n\n    /**\n     * handles interaction on inputs, updates the state that matches the input name\n     * @param  {Object} e - Event object\n     */\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n\n    /**\n     * Creates an error message if user tries to submit the form and the 'inputName' fails validation\n     * @param  {string} errorMessage - an error message string\n     * @param  {string} inputName - name assigned to the input e.g. 'description'\n     * @returns {string} a error message html string to be used as a component\n     */\n    createErrorMessage = (errorMessage, inputName) => {\n        //check if user tried to submit form, if true then display the error message\n        if(this.state.attemptedSubmit && !this.validateInput(inputName)){\n            return (\n                <span className=\"error-message\">{errorMessage}</span>\n            )\n        }\n    }\n\n\n    /**\n     * Replaces any line breaks in a string\n     * @param  {String} str - String containing courseMaterials or estimatedTime info\n     * @returns {string} returns a new string with line breaks removed\n     */\n    trim = (str) => {\n        return str.replace(/(\\r\\n|\\n|\\r)/gm,\"\");\n    }\n\n\n    /**\n     * Tests a value in this.state and returns a boolean\n     * @param  {string} InputName - name assigned to the input e.g. 'description'\n     * @returns {boolean} \n     */\n    validateInput = (inputName) => {\n        const courseTitle = this.state.title;\n        const courseEstimatedTime = this.state.estimatedTime;\n        const courseDescription = this.trim(this.state.description);\n        const courseMaterials = this.trim(this.state.materialsNeeded);\n        switch (inputName) {\n            case 'title':\n                console.log(/^(?=.*[A-Z,a-z,\\d]).{3,}$/.test(courseTitle));\n                return /^(?=.*[A-Z,a-z,\\d]).{3,}$/.test(courseTitle);\n            case 'description':\n                return /^(?=.*[A-Z,a-z,\\d]).{3,}$/.test(courseDescription); \n            case 'estimatedTime':\n            console.log(/^(?=.*[A-Z,a-z,\\d]).{2,}$/.test(courseEstimatedTime))\n                return /^(?=.*[A-Z,a-z,\\d]).{2,}$/.test(courseEstimatedTime);                    \n            case 'materialsNeeded':\n                console.log(/^(?=.*[A-Z,a-z,\\d]).{3,}$/.test(courseMaterials))\n                return /^(?=.*[A-Z,a-z,\\d]).{3,}$/.test(courseMaterials);\n            default:\n                break;\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"bounds course--detail\">\n                <h1>Update Course</h1>\n                <div>\n                    <form onSubmit={this.handleSubmit} >\n                        <div className=\"grid-66\">\n\n                            <div className=\"course--header\">\n                                <h4 className=\"course--label\"><img src={require('../../img/svg/007-content.svg')} alt=\"windmill\" className=\"course-title-svg\"></img> Course {this.createErrorMessage('- *Required', 'title')}</h4>\n                                <div><input onChange={this.handleChange} id=\"title\" name=\"title\" type=\"text\" className=\"input-title course--title--input\" placeholder={this.state.title} value={this.state.title}/></div>\n                                <p><img src={require('../../img/svg/001-woman.svg')} alt=\"windmill\" className=\"course-title-svg\"></img> By {this.context.firstName} {this.context.lastName}</p>\n                            </div>\n\n                            <div className=\"course--description\">\n                                <h4 className=\"course--label\">Description {this.createErrorMessage('- *Required', 'description')}</h4>\n                                <div><textarea onChange={this.handleChange} id=\"description\" name=\"description\" className=\"\" placeholder={this.state.description} value={this.state.description}></textarea></div>\n                            </div>\n\n                        </div>\n\n                        <div className=\"grid-25 grid-right\">\n\n                            <div className=\"course--stats\">\n                                <ul className=\"course--stats--list\">\n\n                                    <li className=\"course--stats--list--item\">\n                                        <h4><img src={require('../../img/svg/004-alarm-clock.svg')} alt=\"windmill\" className=\"course-title-svg\"></img> Estimated Time {this.createErrorMessage('- *Required', 'estimatedTime')}</h4>\n                                        <div><input onChange={this.handleChange} id=\"estimatedTime\" name=\"estimatedTime\" type=\"text\" className=\"course--time--input\" placeholder={this.state.estimatedTime} value={this.state.estimatedTime}/></div>\n                                    </li>\n\n                                    <li className=\"course--stats--list--item\">\n                                        <h4><img src={require('../../img/svg/002-pencil.svg')} alt=\"windmill\" className=\"course-title-svg\"></img> Materials Needed {this.createErrorMessage('- *Required', 'materialsNeeded')}</h4>\n                                        <div><textarea onChange={this.handleChange} id=\"materialsNeeded\" name=\"materialsNeeded\" className=\"\" placeholder={this.state.materialsNeeded} value={this.state.materialsNeeded}></textarea></div>\n                                    </li>\n\n                                </ul>\n                            </div>\n\n                        </div>\n                        <div className=\"grid-100 pad-bottom\"><button className=\"button\" type=\"submit\">Update Course</button><Link to=\"/\"className=\"button button-secondary\">Cancel</Link></div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\nUpdateCourse.contextType = UserContext;\nexport default UpdateCourse;","import React, {useContext, useEffect} from 'react';\nimport { Route, Redirect} from 'react-router-dom';\nimport {UserContext} from '../context/UserProvider';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    \n    //Grab the authenticated state from context 'true/false'\n    const {authenticated, updateLocation, location} = useContext(UserContext);\n    //grab the current url which will be passed to component on redirect, so a user will be redirected to the previous page after sign-in\n    const currentLocation = {...rest.location}.pathname;\n    //if url = createcourse redirect to signin, else its update route, so redirect to forbidden\n    const pathname = currentLocation === '/courses/create' ? '/signin' : '/forbidden';\n\n    //Update the location only if it has changed\n    useEffect(() => {\n        updateLocation(currentLocation);\n    },[location]);\n\n    //if authenticated render the passed component, otherwise redirect to pathname('/signin' or '/forbidden')\n    return (\n        <Route {...rest} render={props => (\n            authenticated ? <Component {...props} /> : <Redirect to={pathname}/>\n        )} />\n    )\n}\n\nexport default PrivateRoute;","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: null,\n        errorInfo : null\n    }\n    /**\n     * Will catch any uncaught errors and set state to these errors\n     * @param  {Object} error - uncaught error object\n     * @param  {String} e - error message\n     */\n    componentDidCatch(error, errorInfo){\n        this.setState({error, errorInfo});\n    }\n\n    render(){\n        //if there is an error display a more user friendly component\n        if(this.state.error){\n            return(\n                <div className=\"error-block\">\n                    <h5>Whoops, something went wrong...</h5>\n                    <details style={{ whiteSpace: 'pre-wrap' }}>\n                        {this.state.errorInfo.componentStack}\n                    </details>\n                </div>\n            )\n        } else {\n            //all is good here\n            return this.props.children\n        }\n        \n    }\n}\n\nexport default ErrorBoundary;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ServerError = () => {\n    return (\n        <div className=\"error-block\">\n            <Link className=\"button\" to=\"/\">Go Back</Link>\n            <p>Sorry, it looks like there was an error with the server...</p>\n        </div>\n    )\n}\n\nexport default ServerError;","import { Component } from 'react';\nimport {UserContext} from '../../context/UserProvider';\n\nclass UserSignOut extends Component {\n    //authenticate user to null, clear any cookies, redirect to courses\n    componentWillMount(){\n        this.context.signOut();\n        this.props.history.push('/');\n    }\n    //component doesn't render anything, just used to log out a user on '/signout' route\n    render(){\n        return null\n    }\n}\nUserSignOut.contextType = UserContext;\nexport default UserSignOut;","import React from 'react';\n\nconst Forbidden = () => {\n    return (\n        <div className=\"error-block\">\n            <h1>Hey, you there, you don't have access to this page!</h1>\n            <p>You need to be signed in to view this page</p>\n        </div>\n    )\n}\n\nexport default Forbidden;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport './App.css';\n\n\n//import components \nimport Nav from './components/Nav';\nimport Courses from './components/Courses';\nimport NotFound from './components/Errors/NotFound';\nimport CourseDetail from './components/CourseDetail/CourseDetail';\nimport UserSignUp from './components/User/UserSignUp';\nimport UserSignIn from './components/User/UserSignIn';\nimport CreateCourse from './components/CreateCourse';\nimport UpdateCourse from './components/CourseDetail/UpdateCourse';\nimport PrivateRoute from './components/PrivateRoute';\nimport UserProvider from './context/UserProvider';\nimport ErrorBoundary from './components/Errors/ErrorBoundary';\nimport ServerError from './components/Errors/ServerError';\nimport UserSignOut from './components/User/UserSignOut';\nimport Forbidden from './components/Errors/Forbidden';\n\n\n\nclass App extends Component {\n  \n  \n  render() {\n    return (\n      <ErrorBoundary>\n        <UserProvider>\n          <Router>\n            <>\n                <Nav/>\n                <Switch>\n                  <Route exact path=\"/\" component={Courses}/>\n\n                  <PrivateRoute exact path=\"/courses/create\" component={CreateCourse}/>\n                  <PrivateRoute exact path=\"/courses/:id/update\" component={UpdateCourse}/>\n\n                  <Route exact path=\"/courses/:id\" component={CourseDetail}/>\n\n                  <Route exact path=\"/signup\" component={UserSignUp}/>\n                  <Route exact path=\"/signin\" component={UserSignIn}/>\n                  <Route exact path=\"/signout\" component={UserSignOut}/>\n                  \n                  <Route exact path=\"/forbidden\" component={Forbidden}/>\n                  <Route exact path=\"/error\" component={ServerError}/>\n                  <Route exact path=\"/notfound\" component={NotFound}/>\n                  <Route component={NotFound}/>\n                </Switch>\n            </>\n          </Router>\n        </UserProvider>\n      </ErrorBoundary>\n      \n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { CookiesProvider } from 'react-cookie';\n\nReactDOM.render(\n    <CookiesProvider>\n        <App />\n    </CookiesProvider>, \n        document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/007-content.6a8ff2b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/001-woman.0d96ebf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/004-alarm-clock.2904dc9b.svg\";","module.exports = __webpack_public_path__ + \"static/media/002-pencil.0f0696a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/008-online-learning.621f3e3a.svg\";"],"sourceRoot":""}